#include <WiFi.h>
#include <HTTPClient.h>
#include <TinyGPS++.h>

// Dados da sua rede WiFi
const char* ssid = "Angelica";
const char* password = "7507995772";
const char* serverUrl = "http://192.168.3.10:3000/dispositivo"; // Substitua pelo IP e endpoint correto do seu servidor


TinyGPSPlus gps;

// Definições dos pinos para RX e TX
#define GPS_RX_PIN 16 // RX2 no ESP32
#define GPS_TX_PIN 17 // TX2 no ESP32

// Cria uma instância de HardwareSerial para o GPS
HardwareSerial gpsSerial(2); // Serial2

void setup() {
  Serial.begin(115200); // Inicializa o monitor serial para debug
  gpsSerial.begin(9600, SERIAL_8N1, GPS_RX_PIN, GPS_TX_PIN); // Inicializa o GPS com os pinos definidos

  // Conectar ao WiFi
  WiFi.begin(ssid, password);
  Serial.print("Conectando ao WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println(" Conectado ao WiFi!");
  Serial.print("Endereço IP: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  while (gpsSerial.available() > 0) {
    char c = gpsSerial.read();
    Serial.print(c); // Imprimir o caractere lido para verificar os dados recebidos
    gps.encode(c);

    if (gps.location.isUpdated()) {
      float latitude = gps.location.lat();
      float longitude = gps.location.lng();
      Serial.print("Latitude: ");
      Serial.print(latitude, 6);
      Serial.print(" Longitude: ");
      Serial.println(longitude, 6);

      // Enviar os dados para a API
      if (WiFi.status() == WL_CONNECTED) {
        HTTPClient http;
        http.begin(serverUrl);
        http.addHeader("Content-Type", "application/json");

        String payload = "{\"latitude\": " + String(latitude, 6) + ", \"longitude\": " + String(longitude, 6) + "}";
        int httpResponseCode = http.POST(payload);

        Serial.print("Código de resposta HTTP: ");
        Serial.println(httpResponseCode);

        if (httpResponseCode > 0) {
          String response = http.getString();
          Serial.println("Resposta do servidor: " + response);
        } else {
          Serial.print("Erro ao enviar dados. Código de erro: ");
          Serial.println(httpResponseCode);
          Serial.print("Descrição do erro: ");
          Serial.println(http.errorToString(httpResponseCode));
        }

        http.end();
      } else {
        Serial.println("Não conectado ao WiFi.");
      }
    }
  }

  delay(10000); // Aguarde 10 segundos antes de enviar novamente
}